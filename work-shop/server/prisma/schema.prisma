// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "mysql"
}

        datasource db {
        provider  = "mysql"
        url       = env("DATABASE_URL")
        }
model User {
  id           		Int      @id @default(autoincrement())
  email        		String   @unique
  password     		String?
  name         		String?
  birthday     		Int
  birthmonth   		Int
  birthyear    		Int
  age          		Int
  sex             String?
  address         String?
  country         String?
  zipcode			    String?
  username     		String?
  picture      		String?
  role    Role?   @relation(fields: [roleId], references: [id])
  roleId  Int?
  enabled      		Boolean  @default(true)
  mem_lastlogin 	DateTime @default(now())
  mem_lastlogout	DateTime @default(now())
  orders       		Order[]
  carts        		Cart[]
  news				    String?
  ip				      String?
  message			    String?
  createdAt    		DateTime @default(now())
  updatedAt    		DateTime @updatedAt
}

model Product {
  id          			Int           @id @default(autoincrement())
  color     			  Color?        @relation(fields: [colorId], references: [id])							
  colorId     			Int?	
  promo  			      Promo?        @relation(fields: [promoId], references: [id])							
  promoId  			    Int?			
  branch 		        Branch?       @relation(fields: [branchId], references: [id])							
  branchId  		    Int?										
  active      			Boolean  @default(true)
  status      			String
  hot_point	  			Int
  code	      			String
  code_group  			String
  factory_code			String
  factory_code_group	String
  bar_code				  String
  bar_code_group		String
  title       			String
  description 			String
  price       			Float
  sold        			Int              @default(0)
  quantity    			Int
  orderItems  			ProductOnOrder[]
  cartItems   			ProductOnCart[]
  images      			Image[]
  createdAt   			DateTime         @default(now())
  updatedAt   			DateTime         @updatedAt
  category    			Category?        @relation(fields: [categoryId], references: [id])
  categoryId  			Int?
}


model Branch {
  id          Int       @id @default(autoincrement())
  name        String
  namet       String
  code	      String
  br_address  String
  status	    Boolean
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


model Promo {
  id          Int       @id @default(autoincrement())
  name        String
  namet       String
  code	      String
  status	    Boolean
  des         String
  startdAt    DateTime
  endAt    	  DateTime
  type        String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}




model Color {
  id          Int       @id @default(autoincrement())
  products    Product[]
  name        String
  namet       String
  code	      String
  status	    Boolean
  des         String
  image       String
  short_code  String
  type        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Order {
  id              Int              @id @default(autoincrement())
  products        ProductOnOrder[]
  cartTotal       Float
  orderStatus     String           @default("Not Process")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  orderedBy       User             @relation(fields: [orderedById], references: [id])
  orderedById     Int
  stripePaymentId String
  amount          Int
  status          String
  currentcy       String
}

model ProductOnOrder {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  count     Int
  price     Float
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
model Role {
  id        Int       @id @default(autoincrement())
  name      String
  user      User[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

}


model Cart {
  id          Int             @id @default(autoincrement())
  products    ProductOnCart[]
  cartTotal   Float
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  orderedBy   User            @relation(fields: [orderedById], references: [id])
  orderedById Int
}

model ProductOnCart {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  count     Int
  price     Float
}

model Image {
  id         Int      @id @default(autoincrement())
  asset_id   String
  public_id  String
  url        String
  secure_url String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int
}
